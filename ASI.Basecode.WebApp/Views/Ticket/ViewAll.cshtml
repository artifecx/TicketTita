@model ASI.Basecode.Services.ServiceModels.PaginatedList<ASI.Basecode.Services.ServiceModels.TicketViewModel>

@{
    ViewData["Title"] = "All Tickets";
    await Html.RenderPartialAsync("_ConfirmationModal");
    await Html.RenderPartialAsync("_DeleteModal");
    await Html.RenderPartialAsync("_CreateTicketModal", new ASI.Basecode.Services.ServiceModels.TicketViewModel());

    List<string> selectedFilters = ViewBag.SelectedFilters;
    string sortBy = ViewData["SortBy"] as string;
    string search = ViewData["Search"] as string;
    string showOption = ViewData["ShowOption"] as string;
    int pageIndex = Model.PageIndex;
    int pageSize = (ViewData["PageSize"] as int?) ?? 5;
}

<div class="d-flex justify-content-between nav-header">
    <h1 class="display-6">Tickets</h1>
    <div class="d-flex justify-content-between">
        <form method="get" asp-action="GetAll" asp-route-sortBy="@sortBy" asp-route-search="@search" asp-route-showOption="@showOption" asp-route-pageIndex="@pageIndex" asp-route-pageSize="@pageSize">
            @for (int i = 0; i < selectedFilters.Count; i++)
            {
                <input type="hidden" name="selectedFilters" value="@selectedFilters[i]" />
            }
            <div class="form-group input-group">
                <input type="text" name="search" class="form-control btn-radius px-3" placeholder="Search by subject" value="@search" />
                <span class="input-group-append">
                    <button type="submit" class="btn btn-primary btn-radius-r px-3">
                        <i class="fa fa-search"></i>
                    </button>
                </span>
            </div>
            <input type="hidden" name="sortBy" value="@sortBy" />
            <input type="hidden" name="showOption" value="@showOption" />
        </form>
        <div class="mx-3">
            <p>
                @if (User.IsInRole("Employee"))
                {
                    <button type="button" class="btn btn-primary btn-radius" data-toggle="modal" data-target="#createTicketModal">
                        <i class="fa fa-plus"></i>
                        New Ticket
                    </button>
                }
            </p>
        </div>
        <div class="mr-3">
            <button type="button" class="btn notif-bell" id="notifBellBtn" onclick="clickNotifBtn()">
                <i class="fa fa-bell px-1"></i>
            </button>
        </div>
        <div id="notificationModal" class="modal fixed-right fade" tabindex="-2" role="dialog">
            <div class="modal-dialog modal-dialog-aside" role="document">
                <div class="modal-content">
                    <!-- Notification Modal -->
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid px-4 py-3">
    <div class="row">
        <div class="col-9">
            @if (!Model.Any())
            {
                <div class="alert alert-warning text-center" role="alert">
                    @(!selectedFilters.Any() ? Html.Raw("No tickets found") : Html.Raw("No tickets found matching the criteria"))
                </div>
            }
            else
            {
                <div class="container py-3">
                    @foreach (var item in Model)
                    {
                        @await Html.PartialAsync("_TicketCard", item)
                    }
                </div>
            }

            <nav class="container">
                <ul class="pagination">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <form method="get" asp-action="GetAll" asp-route-pageIndex="@(Model.PageIndex - 1)" asp-route-sortBy="@sortBy" asp-route-search="@search" asp-route-showOption="@showOption" asp-route-pageSize="@pageSize">
                                @for (int i = 0; i < selectedFilters.Count; i++)
                                {
                                    <input type="hidden" name="selectedFilters" value="@selectedFilters[i]" />
                                }
                                <input type="hidden" name="pageIndex" value="@(Model.PageIndex - 1)" />
                                <input type="hidden" name="pageSize" value="@pageSize" />
                                <button type="submit" class="page-link">Previous</button>
                            </form>
                        </li>
                    }
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                            <form method="get" asp-action="GetAll" asp-route-pageIndex="@i" asp-route-sortBy="@sortBy" asp-route-search="@search" asp-route-showOption="@showOption" asp-route-pageSize="@pageSize">
                                @for (int j = 0; j < selectedFilters.Count; j++)
                                {
                                    <input type="hidden" name="selectedFilters" value="@selectedFilters[j]" />
                                }
                                <input type="hidden" name="pageIndex" value="@i" />
                                <input type="hidden" name="pageSize" value="@pageSize" />
                                <button type="submit" class="page-link">@i</button>
                            </form>
                        </li>
                    }
                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <form method="get" asp-action="GetAll" asp-route-pageIndex="@(Model.PageIndex + 1)" asp-route-sortBy="@sortBy" asp-route-search="@search" asp-route-showOption="@showOption" asp-route-pageSize="@pageSize">
                                @for (int i = 0; i < selectedFilters.Count; i++)
                                {
                                    <input type="hidden" name="selectedFilters" value="@selectedFilters[i]" />
                                }
                                <input type="hidden" name="pageIndex" value="@(Model.PageIndex + 1)" />
                                <input type="hidden" name="pageSize" value="@pageSize" />
                                <button type="submit" class="page-link">Next</button>
                            </form>
                        </li>
                    }
                    @*<li class="d-flex align-items-center ml-2">
                        <label for="pageSize" class="mr-2 mb-0">Items per page:</label>
                        <input type="number" id="pageSize" name="pageSize" class="form-control" style="width: 70px;" min="1" value="@pageSize" />
                    </li>*@
                </ul>
            </nav>
        </div>
        @await Html.PartialAsync("_FiltersAndSortCard", Model)
    </div>
</div>

@*---- Values passed to the js files ----*@
<div id="tempDataContainer" data-success="@TempData["SuccessMessage"]" data-error="@TempData["ErrorMessage"]"></div>
<input type="hidden" id="baseUrl" value="@Url.Action("GetAll", "Ticket")" />
<input type="hidden" id="deleteUrl" value="@Url.Action("Delete", "Ticket")" />

@section Scripts {
    <script src="~/js/confirm.js"></script>
    <script src="~/js/delete.js"></script>
    <script src="~/js/feedback.js"></script>
    <script src="~/js/toastrNotification.js"></script>
    <script src="~/js/ticket.js"></script>
    <script>
        document.getElementById('pageSize').addEventListener('change', function () {
            const url = new URL(window.location.href);
            url.searchParams.set('pageSize', this.value);
            url.searchParams.set('pageIndex', 1);
            window.location.href = url.toString();
        });

        function clickNotifBtn() {
            $.ajax({
                url: '@Url.Action("Index", "Notification")',
                success: function (result) {
                    $('#notificationModal .modal-content').html(result);
                    $('#notificationModal').modal('show');
                }
            });
        }
    </script>
}

@section styles {
    <link rel="stylesheet" href="~/css/notification.css" />
    <link rel="stylesheet" href="~/css/pagination.css" />
}