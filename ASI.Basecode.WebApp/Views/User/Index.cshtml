@model ASI.Basecode.Services.ServiceModels.PaginatedList<ASI.Basecode.Services.ServiceModels.UserViewModel>
@using ASI.Basecode.Data.Models

@{
    ViewData["Title"] = "Index";
    string currentFilter = ViewData["CurrentFilter"] as string;
    string sortOrder = ViewData["CurrentSort"] as string;
    string roleFilter = ViewData["RoleFilter"] as string;
    string nameSortParm = String.IsNullOrEmpty(sortOrder) ? "name_desc" : "";
    string emailSortParm = sortOrder == "Email" ? "email_desc" : "Email";
    string createdBySortParm = sortOrder == "CreatedBy" ? "createdBy_desc" : "CreatedBy";
    string createdTimeSortParm = sortOrder == "CreatedTime" ? "createdTime_desc" : "CreatedTime";
    string updatedBySortParm = sortOrder == "UpdatedBy" ? "updatedBy_desc" : "UpdatedBy";
    string roleSortParm = sortOrder == "Role" ? "role_desc" : "Role";
    string updatedTimeSortParm = sortOrder == "UpdatedTime" ? "updatedTime_desc" : "UpdatedTime";
    bool isSuper = User.HasClaim("IsSuperAdmin", "true");
}

@section styles {
    <link rel="stylesheet" href="~/css/user.css" />
    <link rel="stylesheet" href="~/css/notification.css" />
    <link rel="stylesheet" href="~/css/pagination.css" />
}

<div class="d-flex justify-content-between nav-header">
    <h1 class="display-6">Registered Users</h1>
    <div class="d-flex justify-content-between">
        <form method="get" asp-action="Index">
            <div class="form-group input-group">
                <input type="text" name="searchString" class="form-control btn-radius px-3" placeholder="Search by name or email" value="@currentFilter" />
                <span class="input-group-append">
                    <button type="submit" class="btn btn-primary btn-radius-r px-3">
                        <i class="fa fa-search"></i>
                    </button>
                </span>
                @* <a asp-action="Index" class="btn btn-secondary">Clear Filters</a> *@
            </div>
        </form>
        <div class="mx-3">
            <button type="button" class="btn btn-primary btn-radius px-3" data-toggle="modal" data-target="#createUserModal">
                <i class="fa fa-plus"></i>
                New User
            </button>
        </div>
        <div class="mr-3">
            <button type="button" class="btn notif-bell" id="notifBellBtn">
                <i class="fa fa-bell px-1"></i>
            </button>
        </div>
        <div id="notificationModal" class="modal fixed-right fade" tabindex="-2" role="dialog">
            <div class="modal-dialog modal-dialog-aside" role="document">
                <div class="modal-content">
                    <!-- Notification Modal -->
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid px-4 py-3">
    <table class="table table-white">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@nameSortParm" asp-route-currentFilter="@currentFilter" class="text-black">
                        Name
                        @(string.IsNullOrEmpty(sortOrder) ? Html.Raw("<i class='fa-solid fa-sort-up'></i>") : (sortOrder == "name_desc" ? Html.Raw("<i class='fa-solid fa-sort-down'></i>") : Html.Raw("<i class='fa-solid fa-sort'></i>")))
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@emailSortParm" asp-route-currentFilter="@currentFilter" class="text-black">
                        Email
                        @(sortOrder == "Email" ? Html.Raw("<i class='fa-solid fa-sort-up'></i>") : (sortOrder == "email_desc" ? Html.Raw("<i class='fa-solid fa-sort-down'></i>") : Html.Raw("<i class='fa-solid fa-sort'></i>")))
                    </a>
                </th>
                <th>
                    <div class="dropdown">
                        <a class="text-black" href="#" id="roleDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Role
                            <i class="fa-solid fa-chevron-down"></i>
                        </a>
                        <div class="dropdown-menu" aria-labelledby="roleDropdown">
                            <a class="dropdown-item" asp-action="Index" asp-route-sortOrder="@roleSortParm" asp-route-currentFilter="@currentFilter" asp-route-roleFilter="Admin">Admin</a>
                            <a class="dropdown-item" asp-action="Index" asp-route-sortOrder="@roleSortParm" asp-route-currentFilter="@currentFilter" asp-route-roleFilter="Employee">Employee</a>
                            <a class="dropdown-item" asp-action="Index" asp-route-sortOrder="@roleSortParm" asp-route-currentFilter="@currentFilter" asp-route-roleFilter="Support Agent">Support Agent</a>
                        </div>
                    </div>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@updatedTimeSortParm" asp-route-currentFilter="@currentFilter" class="text-black">
                        Updated Time
                        @(sortOrder == "UpdatedBy" ? Html.Raw("<i class='fa-solid fa-sort-up'></i>") : (sortOrder == "updatedBy_desc" ? Html.Raw("<i class='fa-solid fa-sort-down'></i>") : Html.Raw("<i class='fa-solid fa-sort'></i>")))
                    </a>
                </th>
                <th></th>
            </tr>
        </thead>
        @if (!Model.Any())
        {
            <tr>
                <td colspan="13" class="alert alert-warning text-center" role="alert">
                    @(string.IsNullOrEmpty(currentFilter) ? Html.Raw("No Users found") : Html.Raw("No Users found matching the criteria"))
                </td>
            </tr>
        }
        else
        {
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="font-weight-bold">
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RoleId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UpdatedTime)
                        </td>
                        <td>
                            @if (isSuper || item.RoleId != "Admin")
                            {
                                <a href="javascript:void(0);" class="fas fa-edit action-icon" data-toggle="modal" data-target="#editUserModal" data-userid="@item.UserId" data-toggle="tooltip" title="Edit"></a>
                                <text> | </text>
                            }
                          
                            @Html.ActionLink("", "Details", new { SelectedUserId = item.UserId }, new { @class = "fas fa-info-circle action-icon", data_toggle = "modal", data_target = "#userDetailsModal-" + @item.UserId })
                            @if (isSuper || item.RoleId != "Admin")
                            {
                                <text> | </text>
                                <a href="javascript:void(0);" onclick="displayDeleteModal('@item.UserId')" class="fas fa-trash-alt action-icon"></a>
                            }
                            @if (item.RoleId.Equals("Support Agent"))
                            {
                                <text> | </text>
                                <a href="javascript:void(0);" class="fas fa-tachometer-alt action-icon" data-toggle="modal" data-target="#performanceReportModal" data-userid="@item.UserId" data-toggle="tooltip" title="View Performance"></a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        }
    </table>


    <nav>
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index"
                       asp-route-sortOrder="@sortOrder"
                       asp-route-currentFilter="@currentFilter"
                       asp-route-roleFilter="@roleFilter"
                       asp-route-pageNumber="@(Model.PageIndex - 1)">Previous</a>
                </li>
            }
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Index"
                       asp-route-sortOrder="@sortOrder"
                       asp-route-currentFilter="@currentFilter"
                       asp-route-roleFilter="@roleFilter"
                       asp-route-pageNumber="@i">@i</a>
                </li>
            }
            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index"
                       asp-route-sortOrder="@sortOrder"
                       asp-route-currentFilter="@currentFilter"
                       asp-route-roleFilter="@roleFilter"
                       asp-route-pageNumber="@(Model.PageIndex + 1)">Next</a>
                </li>
            }
        </ul>
    </nav>
</div>

<!-- Add User Modal -->
<div class="modal fade" id="createUserModal" tabindex="-1" role="dialog" aria-labelledby="createUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content" id="createUserModalContent">
        </div>
    </div>
</div>

<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1" role="dialog" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content" id="editUserModalContent">
        </div>
    </div>
</div>

<!-- User Details Modal -->
@foreach (var item in Model)
{
    <div class="modal fade" id="userDetailsModal-@item.UserId" tabindex="-1" role="dialog" aria-labelledby="userDetailsModalLabel-@item.UserId" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">

                <div class="modal-header">
                    <h5 class="modal-title font-weight-bold">User Info</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    <dl class="row">
                        <dt class="col-sm-4">Name</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => item.Name)</dd>

                        <dt class="col-sm-4">Email</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => item.Email)</dd>

                        <dt class="col-sm-4">Password</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => item.Password)</dd>

                        <dt class="col-sm-4">Role</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => item.RoleId)</dd>

                        <dt class="col-sm-4">Created by</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => item.CreatedByName)</dd>

                        <dt class="col-sm-4">Time Created</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => item.CreatedTime)</dd>

                        <dt class="col-sm-4">Updated by</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => item.UpdatedByName)</dd>

                        <dt class="col-sm-4">Time Updated</dt>
                        <dd class="col-sm-8">@Html.DisplayFor(model => item.UpdatedTime)</dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>
}

<!-- Delete User Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fa fa-exclamation-triangle px-1" style="color: var(--danger-color);"></i>
                    Confirm Delete
                </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body pl-4 py-1">
                <p>Are you sure you want to delete this user? This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

<!-- Performance Report Modal -->
<div class="modal fade" id="performanceReportModal" tabindex="-1" role="dialog" aria-labelledby="performanceReportModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="performanceReportModalLabel">Performance Report</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="performanceReportContent">
                <!-- Performance report content will be loaded here -->
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>

        var itemId;
        function displayDeleteModal(id) {
            itemId = id;
            $('#deleteModal').modal('show');
        }
        $('#confirmDeleteBtn').on('click', function () {
            $.ajax({
                url: '@Url.Action("PostDelete", "User")',
                type: 'POST',
                data: { id: itemId },
                success: function (result) {
                    sessionStorage.setItem("DeleteSuccess", "Deleted Successfully");
                    window.location.href = '@Url.Action("Index", "User")';
                }
            });
        });

        $(document).ready(function () {
            $('#createUserModal').on('show.bs.modal', function (e) {
                var url = '@Url.Action("Create")';
                $.get(url, function (data) {
                    $('#createUserModalContent').html(data);
                });
            });

        });

        $(document).ready(function () {
            $('.fa-edit').click(function () {
                var userId = $(this).data('userid');
                var url = '@Url.Action("Update")?SelectedUserId=' + userId;
                $.get(url, function (data) {
                    $('#editUserModalContent').html(data);
                });
            });
        });

        var createMessage = '@TempData["CreateMessage"]';
        var UpdateMessage = '@TempData["UpdateMessage"]';
        var deleteMessage = sessionStorage.getItem("DeleteSuccess");
        var errMessage = '@TempData["DuplicateErr"]';
        var NoChangesMessage = '@TempData["NoChangesMessage"]';
        var NullFieldsMessage = '@TempData["NullFieldsMessage"]';
        var SuccessMessage = '@TempData["SuccessMessage"]';
        var ErrorMessage = '@TempData["ErrorMessage"]';

        if (createMessage) {
            toastr.success(createMessage);
        } else if (errMessage) {
            toastr.error(errMessage);
        } else if (deleteMessage) {
            toastr.success(deleteMessage);
            sessionStorage.removeItem("DeleteSuccess");
        } else if (NoChangesMessage) {
            toastr.error(NoChangesMessage);
        } else if (NullFieldsMessage) {
            toastr.error(NullFieldsMessage);
        } else if (UpdateMessage) {
            toastr.success(UpdateMessage);
        } else if (SuccessMessage) {
            toastr.success(SuccessMessage);
        } else if (ErrorMessage) {
            toastr.error(ErrorMessage);
        }

        $(document).ready(function () {
            // Initialize tooltips
            $('[data-toggle="tooltip"]').tooltip();
        });

        $(document).ready(function () {
            $('#notifBellBtn').click(function () {
                $.ajax({
                    url: '@Url.Action("Index", "Notification")',
                    success: function (result) {
                        $('#notificationModal .modal-content').html(result);
                        $('#notificationModal').modal('show');
                    }
                });
            });
        });
    </script>
    <script>
        $('#performanceReportModal').on('show.bs.modal', function (e) {
            var button = $(e.relatedTarget);
            var selectedUserId = button.data('userid');
            var url = '@Url.Action("PerformanceReport")?userId=' + selectedUserId;
            $.get(url, function (data) {
                $('#performanceReportContent').html(data);
            });
        });
    </script>
}